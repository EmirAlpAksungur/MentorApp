version: "3"

services:
  backend:
    restart: on-failure
    container_name: backend
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - postgre
      - pgadmin
    command: /backend/entrypoint.sh
    volumes:
      - ./backend:/backend
    networks:
      - network
  postgre:
    container_name: postgre
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - network

  frontend:
    restart: unless-stopped
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - network

  pgadmin:
    restart: on-failure
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - network
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - static:/backend/static
    networks:
      - network
    depends_on:
      - backend
      - frontend
volumes:
  pgadmin-data:
  db-data:
  node_modules:
  static:
networks:
  network:
    driver: bridge
